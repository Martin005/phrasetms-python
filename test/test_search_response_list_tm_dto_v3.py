# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.search_response_list_tm_dto_v3 import SearchResponseListTmDtoV3  # noqa: E501
from phrasetms_client.rest import ApiException

class TestSearchResponseListTmDtoV3(unittest.TestCase):
    """SearchResponseListTmDtoV3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SearchResponseListTmDtoV3
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResponseListTmDtoV3`
        """
        model = phrasetms_client.models.search_response_list_tm_dto_v3.SearchResponseListTmDtoV3()  # noqa: E501
        if include_optional :
            return SearchResponseListTmDtoV3(
                search_results = [
                    phrasetms_client.models.search_tm_response_dto_v3.SearchTMResponseDtoV3(
                        segment_id = '', 
                        source = phrasetms_client.models.search_tm_segment_dto_v3.SearchTMSegmentDtoV3(
                            id = '', 
                            text = '', 
                            lang = '', 
                            rtl = True, 
                            modified_at = 56, 
                            created_at = 56, 
                            modified_by = phrasetms_client.models.user_reference.UserReference(
                                first_name = '', 
                                last_name = '', 
                                user_name = '', 
                                email = '', 
                                role = 'SYS_ADMIN', 
                                id = '', 
                                uid = '', ), 
                            created_by = phrasetms_client.models.user_reference.UserReference(
                                first_name = '', 
                                last_name = '', 
                                user_name = '', 
                                email = '', 
                                role = 'SYS_ADMIN', 
                                id = '', 
                                uid = '', ), 
                            filename = '', 
                            project = phrasetms_client.models.search_tm_project_dto_v3.SearchTMProjectDtoV3(
                                id = 56, 
                                uid = '', 
                                name = '', ), 
                            client = phrasetms_client.models.search_tm_client_dto_v3.SearchTMClientDtoV3(
                                id = 56, 
                                name = '', ), 
                            domain = phrasetms_client.models.search_tm_domain_dto_v3.SearchTMDomainDtoV3(
                                id = 56, 
                                name = '', ), 
                            sub_domain = phrasetms_client.models.search_tm_sub_domain_dto_v3.SearchTMSubDomainDtoV3(
                                id = 56, 
                                name = '', ), 
                            tag_metadata = [
                                phrasetms_client.models.tag_metadata.TagMetadata(
                                    id = '', 
                                    type = '', 
                                    content = '', 
                                    trans_attributes = '', )
                                ], 
                            previous_segment = '', 
                            next_segment = '', 
                            key = '', 
                            target_note = '', ), 
                        translations = [
                            phrasetms_client.models.search_tm_segment_dto_v3.SearchTMSegmentDtoV3(
                                id = '', 
                                text = '', 
                                lang = '', 
                                rtl = True, 
                                modified_at = 56, 
                                created_at = 56, 
                                filename = '', 
                                previous_segment = '', 
                                next_segment = '', 
                                key = '', 
                                target_note = '', )
                            ], 
                        trans_memory = phrasetms_client.models.search_tm_trans_memory_dto_v3.SearchTMTransMemoryDtoV3(
                            uid = '', 
                            id = '', 
                            name = '', 
                            reverse = True, ), 
                        gross_score = 1.337, 
                        score = 1.337, 
                        sub_segment = True, )
                    ]
            )
        else :
            return SearchResponseListTmDtoV3(
        )
        """

    def testSearchResponseListTmDtoV3(self):
        """Test SearchResponseListTmDtoV3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
