# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.pre_translate_settings_v3_dto import PreTranslateSettingsV3Dto  # noqa: E501
from phrasetms_client.rest import ApiException

class TestPreTranslateSettingsV3Dto(unittest.TestCase):
    """PreTranslateSettingsV3Dto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PreTranslateSettingsV3Dto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreTranslateSettingsV3Dto`
        """
        model = phrasetms_client.models.pre_translate_settings_v3_dto.PreTranslateSettingsV3Dto()  # noqa: E501
        if include_optional :
            return PreTranslateSettingsV3Dto(
                pre_translate_on_job_creation = True, 
                set_job_status_completed = True, 
                set_job_status_completed_when_confirmed = True, 
                set_project_status_completed = True, 
                overwrite_existing_translations = True, 
                translation_memory_settings = phrasetms_client.models.translation_memory_settings_dto.TranslationMemorySettingsDto(
                    use_translation_memory = True, 
                    translation_memory_threshold = 0, 
                    confirm100_percent_matches = True, 
                    confirm101_percent_matches = True, 
                    lock100_percent_matches = True, 
                    lock101_percent_matches = True, ), 
                machine_translation_settings = phrasetms_client.models.machine_translation_settings_dto.MachineTranslationSettingsDto(
                    use_machine_translation = True, 
                    lock100_percent_matches = True, 
                    confirm100_percent_matches = True, 
                    use_alt_trans_only = True, 
                    mt_qe_matches_in_editors = True, 
                    mt_for_tm_above100 = True, ), 
                non_translatable_settings = phrasetms_client.models.non_translatable_settings_dto.NonTranslatableSettingsDto(
                    pre_translate_non_translatables = True, 
                    confirm100_percent_matches = True, 
                    lock100_percent_matches = True, 
                    non_translatables_in_editors = True, ), 
                repetitions_settings = phrasetms_client.models.repetitions_settings_dto.RepetitionsSettingsDto(
                    auto_propagate_repetitions = True, 
                    confirm_repetitions = True, 
                    auto_propagate_to_locked_repetitions = True, 
                    lock_subsequent_repetitions = True, )
            )
        else :
            return PreTranslateSettingsV3Dto(
        )
        """

    def testPreTranslateSettingsV3Dto(self):
        """Test PreTranslateSettingsV3Dto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
