# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.quote_v2_dto import QuoteV2Dto  # noqa: E501
from phrasetms_client.rest import ApiException

class TestQuoteV2Dto(unittest.TestCase):
    """QuoteV2Dto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test QuoteV2Dto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QuoteV2Dto`
        """
        model = phrasetms_client.models.quote_v2_dto.QuoteV2Dto()  # noqa: E501
        if include_optional :
            return QuoteV2Dto(
                id = 56, 
                uid = '', 
                name = '', 
                status = 'APPROVED', 
                currency = '', 
                billing_unit = 'Character', 
                created_by = phrasetms_client.models.user_reference.UserReference(
                    first_name = '', 
                    last_name = '', 
                    user_name = '', 
                    email = '', 
                    role = 'SYS_ADMIN', 
                    id = '', 
                    uid = '', ), 
                date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                total_price = 1.337, 
                net_rate_scheme = phrasetms_client.models.net_rate_scheme_reference.NetRateSchemeReference(
                    id = '', 
                    uid = '', 
                    name = '', 
                    date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = phrasetms_client.models.user_reference.UserReference(
                        first_name = '', 
                        last_name = '', 
                        user_name = '', 
                        email = '', 
                        role = 'SYS_ADMIN', 
                        id = '', 
                        uid = '', ), ), 
                price_list = phrasetms_client.models.price_list_reference.PriceListReference(
                    id = '', 
                    name = '', 
                    uid = '', ), 
                workflow_step_list = [
                    phrasetms_client.models.workflow_step_reference.WorkflowStepReference(
                        name = '', 
                        id = '', 
                        uid = '', 
                        order = 56, 
                        lqa_enabled = True, )
                    ], 
                provider = phrasetms_client.models.provider_reference.ProviderReference(
                    type = '', 
                    id = '', 
                    uid = '', ), 
                customer_email = '', 
                quote_type = 'BUYER', 
                editable = True, 
                outdated = True, 
                additional_steps = [
                    phrasetms_client.models.additional_workflow_step_v2_dto.AdditionalWorkflowStepV2Dto(
                        id = '', 
                        name = '', )
                    ]
            )
        else :
            return QuoteV2Dto(
        )
        """

    def testQuoteV2Dto(self):
        """Test QuoteV2Dto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
