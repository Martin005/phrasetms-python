# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest

import phrasetms_client
from phrasetms_client.api.job_api import JobApi  # noqa: E501
from phrasetms_client.rest import ApiException


class TestJobApi(unittest.TestCase):
    """JobApi unit test stubs"""

    def setUp(self):
        self.api = phrasetms_client.api.job_api.JobApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_compare_part(self):
        """Test case for compare_part

        Compare jobs on workflow levels  # noqa: E501
        """
        pass

    def test_completed_file1(self):
        """Test case for completed_file1

        Download target file (async)  # noqa: E501
        """
        pass

    def test_copy_source_to_target(self):
        """Test case for copy_source_to_target

        Copy Source to Target  # noqa: E501
        """
        pass

    def test_copy_source_to_target_job_part(self):
        """Test case for copy_source_to_target_job_part

        Copy Source to Target job  # noqa: E501
        """
        pass

    def test_create_job(self):
        """Test case for create_job

        Create job  # noqa: E501
        """
        pass

    def test_create_job_from_async_download_task(self):
        """Test case for create_job_from_async_download_task

        Create job from connector asynchronous download task  # noqa: E501
        """
        pass

    def test_create_term_by_job(self):
        """Test case for create_term_by_job

        Create term in job's term bases  # noqa: E501
        """
        pass

    def test_delete_all_translations(self):
        """Test case for delete_all_translations

        Delete all translations  # noqa: E501
        """
        pass

    def test_delete_all_translations1(self):
        """Test case for delete_all_translations1

        Delete specific translations  # noqa: E501
        """
        pass

    def test_delete_handover_file(self):
        """Test case for delete_handover_file

        Delete handover file  # noqa: E501
        """
        pass

    def test_delete_parts(self):
        """Test case for delete_parts

        Delete job (batch)  # noqa: E501
        """
        pass

    def test_download_completed_file(self):
        """Test case for download_completed_file

        Download target file based on async request  # noqa: E501
        """
        pass

    def test_edit_job_import_settings(self):
        """Test case for edit_job_import_settings

        Edit job import settings  # noqa: E501
        """
        pass

    def test_edit_part(self):
        """Test case for edit_part

        Edit job  # noqa: E501
        """
        pass

    def test_edit_parts(self):
        """Test case for edit_parts

        Edit jobs (batch)  # noqa: E501
        """
        pass

    def test_export_to_online_repository(self):
        """Test case for export_to_online_repository

        Export jobs to online repository  # noqa: E501
        """
        pass

    def test_file_preview(self):
        """Test case for file_preview

        Download preview file  # noqa: E501
        """
        pass

    def test_file_preview_job(self):
        """Test case for file_preview_job

        Download preview file  # noqa: E501
        """
        pass

    def test_get_bilingual_file(self):
        """Test case for get_bilingual_file

        Download bilingual file  # noqa: E501
        """
        pass

    def test_get_completed_file_warnings(self):
        """Test case for get_completed_file_warnings

        Get target file's warnings  # noqa: E501
        """
        pass

    def test_get_handover_files(self):
        """Test case for get_handover_files

        Download handover file(s)  # noqa: E501
        """
        pass

    def test_get_import_settings3(self):
        """Test case for get_import_settings3

        Get import settings for job  # noqa: E501
        """
        pass

    def test_get_original_file(self):
        """Test case for get_original_file

        Download original file  # noqa: E501
        """
        pass

    def test_get_part(self):
        """Test case for get_part

        Get job  # noqa: E501
        """
        pass

    def test_get_parts_workflow_step(self):
        """Test case for get_parts_workflow_step

        Get job's workflowStep  # noqa: E501
        """
        pass

    def test_get_segments_count(self):
        """Test case for get_segments_count

        Get segments count  # noqa: E501
        """
        pass

    def test_get_translation_resources(self):
        """Test case for get_translation_resources

        Get translation resources  # noqa: E501
        """
        pass

    def test_list_part_analyse_v3(self):
        """Test case for list_part_analyse_v3

        List analyses  # noqa: E501
        """
        pass

    def test_list_parts_v2(self):
        """Test case for list_parts_v2

        List jobs  # noqa: E501
        """
        pass

    def test_list_providers4(self):
        """Test case for list_providers4

        Get suggested providers  # noqa: E501
        """
        pass

    def test_list_segments(self):
        """Test case for list_segments

        Get segments  # noqa: E501
        """
        pass

    def test_notify_assigned(self):
        """Test case for notify_assigned

        Notify assigned users  # noqa: E501
        """
        pass

    def test_patch_part(self):
        """Test case for patch_part

        Patch job  # noqa: E501
        """
        pass

    def test_patch_update_job_parts(self):
        """Test case for patch_update_job_parts

        Edit jobs (with possible partial updates)  # noqa: E501
        """
        pass

    def test_preview_urls(self):
        """Test case for preview_urls

        Get PDF preview  # noqa: E501
        """
        pass

    def test_pseudo_translate1(self):
        """Test case for pseudo_translate1

        Pseudo-translate job  # noqa: E501
        """
        pass

    def test_pseudo_translate_job_part(self):
        """Test case for pseudo_translate_job_part

        Pseudo-translates job  # noqa: E501
        """
        pass

    def test_search_by_job3(self):
        """Test case for search_by_job3

        Search job's translation memories  # noqa: E501
        """
        pass

    def test_search_parts_in_project(self):
        """Test case for search_parts_in_project

        Search jobs in project  # noqa: E501
        """
        pass

    def test_search_segment_by_job(self):
        """Test case for search_segment_by_job

        Search translation memory for segment by job  # noqa: E501
        """
        pass

    def test_search_terms_by_job1(self):
        """Test case for search_terms_by_job1

        Search job's term bases  # noqa: E501
        """
        pass

    def test_search_terms_in_text_by_job_v2(self):
        """Test case for search_terms_in_text_by_job_v2

        Search terms in text  # noqa: E501
        """
        pass

    def test_set_status(self):
        """Test case for set_status

        Edit job status  # noqa: E501
        """
        pass

    def test_split(self):
        """Test case for split

        Split job  # noqa: E501
        """
        pass

    def test_status_changes(self):
        """Test case for status_changes

        Get status changes  # noqa: E501
        """
        pass

    def test_update_source(self):
        """Test case for update_source

        Update source  # noqa: E501
        """
        pass

    def test_update_target(self):
        """Test case for update_target

        Update target  # noqa: E501
        """
        pass

    def test_upload_bilingual_file(self):
        """Test case for upload_bilingual_file

        Upload bilingual file  # noqa: E501
        """
        pass

    def test_upload_handover_file(self):
        """Test case for upload_handover_file

        Upload handover file  # noqa: E501
        """
        pass

    def test_web_editor_link_v2(self):
        """Test case for web_editor_link_v2

        Get Web Editor URL  # noqa: E501
        """
        pass

    def test_wild_card_search_by_job3(self):
        """Test case for wild_card_search_by_job3

        Wildcard search job's translation memories  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
