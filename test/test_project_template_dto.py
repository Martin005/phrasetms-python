# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.project_template_dto import ProjectTemplateDto  # noqa: E501
from phrasetms_client.rest import ApiException

class TestProjectTemplateDto(unittest.TestCase):
    """ProjectTemplateDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProjectTemplateDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectTemplateDto`
        """
        model = phrasetms_client.models.project_template_dto.ProjectTemplateDto()  # noqa: E501
        if include_optional :
            return ProjectTemplateDto(
                id = '', 
                uid = '', 
                template_name = '', 
                name = '', 
                source_lang = '', 
                target_langs = [
                    ''
                    ], 
                note = '', 
                use_dynamic_title = True, 
                dynamic_title = '', 
                owner = phrasetms_client.models.user_reference.UserReference(
                    first_name = '', 
                    last_name = '', 
                    user_name = '', 
                    email = '', 
                    role = 'SYS_ADMIN', 
                    id = '', 
                    uid = '', ), 
                client = phrasetms_client.models.client_reference.ClientReference(
                    id = '', 
                    uid = '', 
                    name = '', ), 
                domain = phrasetms_client.models.domain_reference.DomainReference(
                    name = '', 
                    id = '', 
                    uid = '', ), 
                sub_domain = phrasetms_client.models.sub_domain_reference.SubDomainReference(
                    name = '', 
                    id = '', 
                    uid = '', ), 
                vendor = phrasetms_client.models.vendor_reference.VendorReference(
                    id = '', 
                    uid = '', 
                    name = '', ), 
                created_by = phrasetms_client.models.user_reference.UserReference(
                    first_name = '', 
                    last_name = '', 
                    user_name = '', 
                    email = '', 
                    role = 'SYS_ADMIN', 
                    id = '', 
                    uid = '', ), 
                date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                modified_by = phrasetms_client.models.user_reference.UserReference(
                    first_name = '', 
                    last_name = '', 
                    user_name = '', 
                    email = '', 
                    role = 'SYS_ADMIN', 
                    id = '', 
                    uid = '', ), 
                date_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                date_time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                workflow_steps = [
                    phrasetms_client.models.workflow_step_dto.WorkflowStepDto(
                        id = '', 
                        uid = '', 
                        name = '', 
                        abbr = '', 
                        order = 56, 
                        lqa_enabled = True, )
                    ], 
                workflow_settings = [
                    phrasetms_client.models.workflow_step_settings_dto.WorkflowStepSettingsDto(
                        workflow_step = phrasetms_client.models.workflow_step_reference.WorkflowStepReference(
                            name = '', 
                            id = '', 
                            uid = '', 
                            order = 56, 
                            lqa_enabled = True, ), 
                        assigned_to = [
                            phrasetms_client.models.project_template_workflow_settings_assigned_to_dto.ProjectTemplateWorkflowSettingsAssignedToDto(
                                target_lang = '', 
                                providers = [
                                    phrasetms_client.models.provider_reference.ProviderReference(
                                        type = '', 
                                        id = '', 
                                        uid = '', )
                                    ], )
                            ], 
                        notify_provider = phrasetms_client.models.project_template_notify_provider_dto.ProjectTemplateNotifyProviderDto(
                            organization_email_template = phrasetms_client.models.analyse.analyse(), 
                            notification_interval_in_minutes = 0, ), 
                        lqa_profile = phrasetms_client.models.uid_reference.UidReference(
                            uid = '', ), )
                    ], 
                business_unit = phrasetms_client.models.business_unit_reference.BusinessUnitReference(
                    name = '', 
                    id = '', 
                    uid = '', ), 
                notify_providers = phrasetms_client.models.project_template_notify_provider_dto.ProjectTemplateNotifyProviderDto(
                    organization_email_template = phrasetms_client.models.analyse.analyse(), 
                    notification_interval_in_minutes = 0, ), 
                assigned_to = [
                    phrasetms_client.models.assignment_per_target_lang_dto.AssignmentPerTargetLangDto(
                        target_lang = '', 
                        providers = [
                            phrasetms_client.models.provider_reference.ProviderReference(
                                type = '', 
                                id = '', 
                                uid = '', )
                            ], )
                    ], 
                import_settings = phrasetms_client.models.uid_reference.UidReference(
                    uid = '', )
            )
        else :
            return ProjectTemplateDto(
        )
        """

    def testProjectTemplateDto(self):
        """Test ProjectTemplateDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
