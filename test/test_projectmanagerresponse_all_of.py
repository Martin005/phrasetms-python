# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.projectmanagerresponse_all_of import PROJECTMANAGERRESPONSEAllOf  # noqa: E501
from phrasetms_client.rest import ApiException

class TestPROJECTMANAGERRESPONSEAllOf(unittest.TestCase):
    """PROJECTMANAGERRESPONSEAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PROJECTMANAGERRESPONSEAllOf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PROJECTMANAGERRESPONSEAllOf`
        """
        model = phrasetms_client.models.projectmanagerresponse_all_of.PROJECTMANAGERRESPONSEAllOf()  # noqa: E501
        if include_optional :
            return PROJECTMANAGERRESPONSEAllOf(
                source_locales = [
                    ''
                    ], 
                target_locales = [
                    ''
                    ], 
                workflow_steps = [
                    phrasetms_client.models.workflow_step_reference_v3.WorkflowStepReferenceV3(
                        name = '', 
                        id = '', 
                        uid = '', 
                        order = 56, 
                        lqa_enabled = True, )
                    ], 
                clients = [
                    phrasetms_client.models.client_reference.ClientReference(
                        id = '', 
                        uid = '', 
                        name = '', )
                    ], 
                domains = [
                    phrasetms_client.models.domain_reference.DomainReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                sub_domains = [
                    phrasetms_client.models.sub_domain_reference.SubDomainReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                project_create = True, 
                project_view_other = True, 
                project_edit_other = True, 
                project_delete_other = True, 
                project_clients = [
                    phrasetms_client.models.client_reference.ClientReference(
                        id = '', 
                        uid = '', 
                        name = '', )
                    ], 
                project_business_units = [
                    phrasetms_client.models.business_unit_reference.BusinessUnitReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                project_template_create = True, 
                project_template_view_other = True, 
                project_template_edit_other = True, 
                project_template_delete_other = True, 
                project_template_clients = [
                    phrasetms_client.models.client_reference.ClientReference(
                        id = '', 
                        uid = '', 
                        name = '', )
                    ], 
                project_template_business_units = [
                    phrasetms_client.models.business_unit_reference.BusinessUnitReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                trans_memory_create = True, 
                trans_memory_view_other = True, 
                trans_memory_edit_other = True, 
                trans_memory_delete_other = True, 
                trans_memory_export_other = True, 
                trans_memory_import_other = True, 
                trans_memory_clients = [
                    phrasetms_client.models.client_reference.ClientReference(
                        id = '', 
                        uid = '', 
                        name = '', )
                    ], 
                trans_memory_business_units = [
                    phrasetms_client.models.business_unit_reference.BusinessUnitReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                term_base_create = True, 
                term_base_view_other = True, 
                term_base_edit_other = True, 
                term_base_delete_other = True, 
                term_base_export_other = True, 
                term_base_import_other = True, 
                term_base_approve_other = True, 
                term_base_clients = [
                    phrasetms_client.models.client_reference.ClientReference(
                        id = '', 
                        uid = '', 
                        name = '', )
                    ], 
                term_base_business_units = [
                    phrasetms_client.models.business_unit_reference.BusinessUnitReference(
                        name = '', 
                        id = '', 
                        uid = '', )
                    ], 
                user_create = True, 
                user_view_other = True, 
                user_edit_other = True, 
                user_delete_other = True, 
                client_domain_sub_domain_create = True, 
                client_domain_sub_domain_view_other = True, 
                client_domain_sub_domain_edit_other = True, 
                client_domain_sub_domain_delete_other = True, 
                vendor_create = True, 
                vendor_view_other = True, 
                vendor_edit_other = True, 
                vendor_delete_other = True, 
                dashboard_setting = '', 
                setup_server = True
            )
        else :
            return PROJECTMANAGERRESPONSEAllOf(
        )
        """

    def testPROJECTMANAGERRESPONSEAllOf(self):
        """Test PROJECTMANAGERRESPONSEAllOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
