# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.job_create_request_dto import JobCreateRequestDto  # noqa: E501
from phrasetms_client.rest import ApiException

class TestJobCreateRequestDto(unittest.TestCase):
    """JobCreateRequestDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobCreateRequestDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobCreateRequestDto`
        """
        model = phrasetms_client.models.job_create_request_dto.JobCreateRequestDto()  # noqa: E501
        if include_optional :
            return JobCreateRequestDto(
                target_langs = [
                    ''
                    ], 
                due = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                workflow_settings = [
                    phrasetms_client.models.workflow_step_configuration.WorkflowStepConfiguration(
                        id = '', 
                        assignments = [
                            phrasetms_client.models.providers_per_language.ProvidersPerLanguage(
                                target_lang = '', 
                                providers = [
                                    phrasetms_client.models.provider_reference.ProviderReference(
                                        type = '', 
                                        id = '', 
                                        uid = '', )
                                    ], 
                                assigned_users = [
                                    phrasetms_client.models.user.User(
                                        id = 56, )
                                    ], )
                            ], 
                        due = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        notify_provider = phrasetms_client.models.notify_provider_dto.NotifyProviderDto(
                            organization_email_template = phrasetms_client.models.id_reference.IdReference(
                                id = '', ), 
                            notification_interval_in_minutes = 0, ), )
                    ], 
                assignments = [
                    phrasetms_client.models.providers_per_language.ProvidersPerLanguage(
                        target_lang = '', 
                        providers = [
                            phrasetms_client.models.provider_reference.ProviderReference(
                                type = '', 
                                id = '', 
                                uid = '', )
                            ], 
                        assigned_users = [
                            phrasetms_client.models.user.User(
                                id = 56, )
                            ], )
                    ], 
                import_settings = phrasetms_client.models.uid_reference.UidReference(
                    uid = '', ), 
                use_project_file_import_settings = True, 
                pre_translate = True, 
                notify_provider = phrasetms_client.models.notify_provider_dto.NotifyProviderDto(
                    organization_email_template = phrasetms_client.models.id_reference.IdReference(
                        id = '', ), 
                    notification_interval_in_minutes = 0, ), 
                callback_url = '', 
                path = '', 
                remote_file = phrasetms_client.models.job_create_remote_file_dto.JobCreateRemoteFileDto(
                    connector_token = '', 
                    remote_folder = '', 
                    remote_file_name = '', 
                    remote_file_name_regex = True, 
                    continuous = True, )
            )
        else :
            return JobCreateRequestDto(
                target_langs = [
                    ''
                    ],
        )
        """

    def testJobCreateRequestDto(self):
        """Test JobCreateRequestDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
