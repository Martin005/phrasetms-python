# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.quality_assurance_checks_dto_v2 import QualityAssuranceChecksDtoV2  # noqa: E501
from phrasetms_client.rest import ApiException

class TestQualityAssuranceChecksDtoV2(unittest.TestCase):
    """QualityAssuranceChecksDtoV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test QualityAssuranceChecksDtoV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QualityAssuranceChecksDtoV2`
        """
        model = phrasetms_client.models.quality_assurance_checks_dto_v2.QualityAssuranceChecksDtoV2()  # noqa: E501
        if include_optional :
            return QualityAssuranceChecksDtoV2(
                forbidden_strings = [
                    ''
                    ], 
                enabled_checks = 
   [
      {
         "checkerType":"EmptyTranslation",
         "ignorable":false
      },
      {
         "checkerType":"TrailingPunctuation",
         "ignorable":false
      },
      {
         "checkerType":"Formatting",
         "ignorable":false
      },
      {
         "checkerType":"JoinTags",
         "ignorable":false
      },
      {
         "checkerType":"MissingNumbers",
         "ignorable":false
      },
      {
         "checkerType":"MultipleSpaces",
         "ignorable":false
      },
      {
         "checkerType":"NonConformingTerm",
         "ignorable":false
      },
      {
         "checkerType":"NotConfirmed",
         "ignorable":false
      },
      {
         "checkerType":"TranslationLength",
         "ignorable":false
      },
      {
         "checkerType": "AbsoluteLength",
         "ignorable": false
      },
      {
         "checkerType": "RelativeLength",
         "ignorable": false
      },
      {
         "checkerType":"EmptyPairTags",
         "ignorable":false
      },
      {
         "checkerType":"InconsistentTranslationTargetSource",
         "ignorable":true
      },
      {
         "checkerType":"InconsistentTranslationSourceTarget",
         "ignorable":true
      },
      {
         "checkerType":"ForbiddenString",
         "ignorable":false
      },
      {
         "checkerType":"SpellCheck",
         "ignorable":false
      },
      {
         "checkerType":"RepeatedWords",
         "ignorable":false
      },
      {
         "checkerType":"InconsistentTagContent",
         "ignorable":false
      },
      {
         "checkerType":"EmptyTagContent",
         "ignorable":false
      },
      {
         "checkerType":"Malformed",
         "ignorable":false
      },
      {
         "checkerType":"ForbiddenTerm",
         "ignorable":false
      },
      {
         "checkerType":"NewerAtLowerLevel",
         "ignorable":false
      },
      {
         "checkerType":"LeadingAndTrailingSpaces",
         "ignorable":false
      },
      {
         "checkerType":"TargetSourceIdentical",
         "ignorable":false
      },
      {
         "checkerType":"SourceOrTargetRegexp"
      },
      {
         "checkerType":"UnmodifiedFuzzyTranslationTM",
         "ignorable":true
      },
      {
         "checkerType":"UnmodifiedFuzzyTranslationMTNT",
         "ignorable":true
      },
      {
         "checkerType":"Moravia",
         "ignorable":false,
         "context": {"moraviaProfileId": "MoraviaProfileIdValue"}
      },
      {
         "checkerType":"ExtraNumbers",
         "ignorable":true
      },
      {
         "checkerType":"UnresolvedConversation",
         "ignorable":false
      },
      {
         "checkerType":"NestedTags",
         "ignorable":false
      },
      {
         "checkerType":"FuzzyInconsistency",
         "ignorable":true
      }
   ]
, 
                exclude_locked_segments = True, 
                user_can_set_instant_qa = True, 
                strict_job_status = True, 
                regexp_rules = [
                    phrasetms_client.models.regexp_check_rule_dto_v2.RegexpCheckRuleDtoV2(
                        description = '', 
                        source_regexp = '', 
                        target_regexp = '', 
                        id = '', 
                        ignorable = True, 
                        instant = True, )
                    ]
            )
        else :
            return QualityAssuranceChecksDtoV2(
        )
        """

    def testQualityAssuranceChecksDtoV2(self):
        """Test QualityAssuranceChecksDtoV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
