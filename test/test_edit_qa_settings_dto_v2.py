# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.edit_qa_settings_dto_v2 import EditQASettingsDtoV2  # noqa: E501
from phrasetms_client.rest import ApiException

class TestEditQASettingsDtoV2(unittest.TestCase):
    """EditQASettingsDtoV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EditQASettingsDtoV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EditQASettingsDtoV2`
        """
        model = phrasetms_client.models.edit_qa_settings_dto_v2.EditQASettingsDtoV2()  # noqa: E501
        if include_optional :
            return EditQASettingsDtoV2(
                checks = 
        {
            "ignorable": false,
            "enabled": true,
            "type": "VOID",
            "instant": false,
            "name": "emptyTarget"
        },
        {
            "ignorable": false,
            "enabled": true,
            "value": 12,
            "type": "NUMBER",
            "name": "targetLength"
        },
        {
            "ignorable": false,
            "enabled": true,
            "value": "ASAP, irony",
            "type": "STRING",
            "instant": true,
            "name": "forbiddenStrings"
        },
        {
            "enabled": true,
            "profile": "jiris",
            "ignorable": true,
            "type": "MORAVIA",
            "name": "moravia"
        },
        {
            "rules": [
                {
                    "description": "Description",
                    "sourceRegexp": ".+",
                    "targetRegexp": ".+",
                    "ignorable": true
                },
                {
                    "description": "Description",
                    "sourceRegexp": "i+",
                    "targetRegexp": "e+",
                    "ignorable": false
                }
            ],
            "type": "REGEX",
            "name": "regexp"
        },
        {
            "enabled": true,
            "ignorable": true,
            "type": "VOID",
            "name": "customQa"
        }
    
            )
        else :
            return EditQASettingsDtoV2(
        )
        """

    def testEditQASettingsDtoV2(self):
        """Test EditQASettingsDtoV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
