# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import phrasetms_client
from phrasetms_client.models.error_categories_dto import ErrorCategoriesDto  # noqa: E501
from phrasetms_client.rest import ApiException

class TestErrorCategoriesDto(unittest.TestCase):
    """ErrorCategoriesDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ErrorCategoriesDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorCategoriesDto`
        """
        model = phrasetms_client.models.error_categories_dto.ErrorCategoriesDto()  # noqa: E501
        if include_optional :
            return ErrorCategoriesDto(
                accuracy = phrasetms_client.models.accuracy_weights_dto.AccuracyWeightsDto(
                    accuracy = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    addition = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    omission = , 
                    mistranslation = , 
                    under_translation = , 
                    untranslated = , 
                    improper_tm_match = , 
                    over_translation = , ), 
                fluency = phrasetms_client.models.fluency_weights_dto.FluencyWeightsDto(
                    fluency = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    punctuation = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    spelling = , 
                    grammar = , 
                    grammatical_register = , 
                    inconsistency = , 
                    cross_reference = , 
                    character_encoding = , ), 
                terminology = phrasetms_client.models.terminology_weights_dto.TerminologyWeightsDto(
                    terminology = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    inconsistent_with_tb = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    inconsistent_use_of_terminology = , ), 
                style = phrasetms_client.models.style_weights_dto.StyleWeightsDto(
                    style = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    awkward = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    company_style = , 
                    inconsistent_style = , 
                    third_party_style = , 
                    unidiomatic = , ), 
                locale_convention = phrasetms_client.models.locale_convention_weights_dto.LocaleConventionWeightsDto(
                    locale_convention = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    address_format = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    date_format = , 
                    currency_format = , 
                    measurement_format = , 
                    shortcut_key = , 
                    telephone_format = , ), 
                verity = phrasetms_client.models.verity_weights_dto.VerityWeightsDto(
                    verity = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    culture_specific_reference = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), ), 
                design = phrasetms_client.models.design_weights_dto.DesignWeightsDto(
                    design = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    length = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), 
                    local_formatting = , 
                    markup = , 
                    missing_text = , 
                    truncation = , ), 
                other = phrasetms_client.models.other_weights_dto.OtherWeightsDto(
                    other = phrasetms_client.models.toggleable_weight_dto.ToggleableWeightDto(
                        enabled = True, 
                        weight = 1.0, 
                        code = 56, ), )
            )
        else :
            return ErrorCategoriesDto(
        )
        """

    def testErrorCategoriesDto(self):
        """Test ErrorCategoriesDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
