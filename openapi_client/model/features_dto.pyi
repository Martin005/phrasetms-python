# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from phrasetms_client import schemas  # noqa: F401


class FeaturesDto(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            icuEnabled = schemas.BoolSchema
            rejectJobs = schemas.BoolSchema
            qaHighlightsEnabled = schemas.BoolSchema
            lqaBulkCommentsCreation = schemas.BoolSchema
            mtForTMAbove100Enabled = schemas.BoolSchema
            __annotations__ = {
                "icuEnabled": icuEnabled,
                "rejectJobs": rejectJobs,
                "qaHighlightsEnabled": qaHighlightsEnabled,
                "lqaBulkCommentsCreation": lqaBulkCommentsCreation,
                "mtForTMAbove100Enabled": mtForTMAbove100Enabled,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["icuEnabled"]) -> MetaOapg.properties.icuEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rejectJobs"]) -> MetaOapg.properties.rejectJobs: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["qaHighlightsEnabled"]) -> MetaOapg.properties.qaHighlightsEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lqaBulkCommentsCreation"]) -> MetaOapg.properties.lqaBulkCommentsCreation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mtForTMAbove100Enabled"]) -> MetaOapg.properties.mtForTMAbove100Enabled: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["icuEnabled", "rejectJobs", "qaHighlightsEnabled", "lqaBulkCommentsCreation", "mtForTMAbove100Enabled", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["icuEnabled"]) -> typing.Union[MetaOapg.properties.icuEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rejectJobs"]) -> typing.Union[MetaOapg.properties.rejectJobs, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["qaHighlightsEnabled"]) -> typing.Union[MetaOapg.properties.qaHighlightsEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lqaBulkCommentsCreation"]) -> typing.Union[MetaOapg.properties.lqaBulkCommentsCreation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mtForTMAbove100Enabled"]) -> typing.Union[MetaOapg.properties.mtForTMAbove100Enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["icuEnabled", "rejectJobs", "qaHighlightsEnabled", "lqaBulkCommentsCreation", "mtForTMAbove100Enabled", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        icuEnabled: typing.Union[MetaOapg.properties.icuEnabled, bool, schemas.Unset] = schemas.unset,
        rejectJobs: typing.Union[MetaOapg.properties.rejectJobs, bool, schemas.Unset] = schemas.unset,
        qaHighlightsEnabled: typing.Union[MetaOapg.properties.qaHighlightsEnabled, bool, schemas.Unset] = schemas.unset,
        lqaBulkCommentsCreation: typing.Union[MetaOapg.properties.lqaBulkCommentsCreation, bool, schemas.Unset] = schemas.unset,
        mtForTMAbove100Enabled: typing.Union[MetaOapg.properties.mtForTMAbove100Enabled, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FeaturesDto':
        return super().__new__(
            cls,
            *_args,
            icuEnabled=icuEnabled,
            rejectJobs=rejectJobs,
            qaHighlightsEnabled=qaHighlightsEnabled,
            lqaBulkCommentsCreation=lqaBulkCommentsCreation,
            mtForTMAbove100Enabled=mtForTMAbove100Enabled,
            _configuration=_configuration,
            **kwargs,
        )
