# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class FileListDto(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            
            
            class files(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['FileDto']:
                        return FileDto
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['FileDto'], typing.List['FileDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'files':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'FileDto':
                    return super().__getitem__(i)
            currentFolder = schemas.StrSchema
            encodedCurrentFolder = schemas.StrSchema
            rootFolder = schemas.BoolSchema
            
            
            class lastChangedFiles(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['FileDto']:
                        return FileDto
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['FileDto'], typing.List['FileDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lastChangedFiles':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'FileDto':
                    return super().__getitem__(i)
            __annotations__ = {
                "files": files,
                "currentFolder": currentFolder,
                "encodedCurrentFolder": encodedCurrentFolder,
                "rootFolder": rootFolder,
                "lastChangedFiles": lastChangedFiles,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["files"]) -> MetaOapg.properties.files: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currentFolder"]) -> MetaOapg.properties.currentFolder: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encodedCurrentFolder"]) -> MetaOapg.properties.encodedCurrentFolder: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rootFolder"]) -> MetaOapg.properties.rootFolder: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastChangedFiles"]) -> MetaOapg.properties.lastChangedFiles: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["files", "currentFolder", "encodedCurrentFolder", "rootFolder", "lastChangedFiles", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["files"]) -> typing.Union[MetaOapg.properties.files, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currentFolder"]) -> typing.Union[MetaOapg.properties.currentFolder, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encodedCurrentFolder"]) -> typing.Union[MetaOapg.properties.encodedCurrentFolder, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rootFolder"]) -> typing.Union[MetaOapg.properties.rootFolder, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastChangedFiles"]) -> typing.Union[MetaOapg.properties.lastChangedFiles, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["files", "currentFolder", "encodedCurrentFolder", "rootFolder", "lastChangedFiles", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        files: typing.Union[MetaOapg.properties.files, list, tuple, schemas.Unset] = schemas.unset,
        currentFolder: typing.Union[MetaOapg.properties.currentFolder, str, schemas.Unset] = schemas.unset,
        encodedCurrentFolder: typing.Union[MetaOapg.properties.encodedCurrentFolder, str, schemas.Unset] = schemas.unset,
        rootFolder: typing.Union[MetaOapg.properties.rootFolder, bool, schemas.Unset] = schemas.unset,
        lastChangedFiles: typing.Union[MetaOapg.properties.lastChangedFiles, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FileListDto':
        return super().__new__(
            cls,
            *_args,
            files=files,
            currentFolder=currentFolder,
            encodedCurrentFolder=encodedCurrentFolder,
            rootFolder=rootFolder,
            lastChangedFiles=lastChangedFiles,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.file_dto import FileDto
