# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from phrasetms_client import schemas  # noqa: F401


class EditProjectSecuritySettingsDtoV2(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            downloadEnabled = schemas.BoolSchema
            webEditorEnabledForLinguists = schemas.BoolSchema
            showUserDataToLinguists = schemas.BoolSchema
            emailNotifications = schemas.BoolSchema
            strictWorkflowFinish = schemas.BoolSchema
            useVendors = schemas.BoolSchema
            linguistsMayEditLockedSegments = schemas.BoolSchema
            usersMaySetAutoPropagation = schemas.BoolSchema
            allowLoadingExternalContentInEditors = schemas.BoolSchema
            allowLoadingIframes = schemas.BoolSchema
            linguistsMayEditSource = schemas.BoolSchema
            linguistsMayEditTagContent = schemas.BoolSchema
            linguistsMayDownloadLqaReport = schemas.BoolSchema
            usernamesDisplayedInLqaReport = schemas.BoolSchema
            userMaySetInstantQA = schemas.BoolSchema
            triggerWebhooks = schemas.BoolSchema
            notifyJobOwnerStatusChanged = schemas.BoolSchema
        
            @staticmethod
            def vendors() -> typing.Type['VendorSecuritySettingsDto']:
                return VendorSecuritySettingsDto
            
            
            class allowedDomains(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'allowedDomains':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "downloadEnabled": downloadEnabled,
                "webEditorEnabledForLinguists": webEditorEnabledForLinguists,
                "showUserDataToLinguists": showUserDataToLinguists,
                "emailNotifications": emailNotifications,
                "strictWorkflowFinish": strictWorkflowFinish,
                "useVendors": useVendors,
                "linguistsMayEditLockedSegments": linguistsMayEditLockedSegments,
                "usersMaySetAutoPropagation": usersMaySetAutoPropagation,
                "allowLoadingExternalContentInEditors": allowLoadingExternalContentInEditors,
                "allowLoadingIframes": allowLoadingIframes,
                "linguistsMayEditSource": linguistsMayEditSource,
                "linguistsMayEditTagContent": linguistsMayEditTagContent,
                "linguistsMayDownloadLqaReport": linguistsMayDownloadLqaReport,
                "usernamesDisplayedInLqaReport": usernamesDisplayedInLqaReport,
                "userMaySetInstantQA": userMaySetInstantQA,
                "triggerWebhooks": triggerWebhooks,
                "notifyJobOwnerStatusChanged": notifyJobOwnerStatusChanged,
                "vendors": vendors,
                "allowedDomains": allowedDomains,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["downloadEnabled"]) -> MetaOapg.properties.downloadEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webEditorEnabledForLinguists"]) -> MetaOapg.properties.webEditorEnabledForLinguists: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showUserDataToLinguists"]) -> MetaOapg.properties.showUserDataToLinguists: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailNotifications"]) -> MetaOapg.properties.emailNotifications: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["strictWorkflowFinish"]) -> MetaOapg.properties.strictWorkflowFinish: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["useVendors"]) -> MetaOapg.properties.useVendors: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linguistsMayEditLockedSegments"]) -> MetaOapg.properties.linguistsMayEditLockedSegments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usersMaySetAutoPropagation"]) -> MetaOapg.properties.usersMaySetAutoPropagation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowLoadingExternalContentInEditors"]) -> MetaOapg.properties.allowLoadingExternalContentInEditors: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowLoadingIframes"]) -> MetaOapg.properties.allowLoadingIframes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linguistsMayEditSource"]) -> MetaOapg.properties.linguistsMayEditSource: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linguistsMayEditTagContent"]) -> MetaOapg.properties.linguistsMayEditTagContent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linguistsMayDownloadLqaReport"]) -> MetaOapg.properties.linguistsMayDownloadLqaReport: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernamesDisplayedInLqaReport"]) -> MetaOapg.properties.usernamesDisplayedInLqaReport: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userMaySetInstantQA"]) -> MetaOapg.properties.userMaySetInstantQA: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["triggerWebhooks"]) -> MetaOapg.properties.triggerWebhooks: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notifyJobOwnerStatusChanged"]) -> MetaOapg.properties.notifyJobOwnerStatusChanged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vendors"]) -> 'VendorSecuritySettingsDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowedDomains"]) -> MetaOapg.properties.allowedDomains: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["downloadEnabled", "webEditorEnabledForLinguists", "showUserDataToLinguists", "emailNotifications", "strictWorkflowFinish", "useVendors", "linguistsMayEditLockedSegments", "usersMaySetAutoPropagation", "allowLoadingExternalContentInEditors", "allowLoadingIframes", "linguistsMayEditSource", "linguistsMayEditTagContent", "linguistsMayDownloadLqaReport", "usernamesDisplayedInLqaReport", "userMaySetInstantQA", "triggerWebhooks", "notifyJobOwnerStatusChanged", "vendors", "allowedDomains", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["downloadEnabled"]) -> typing.Union[MetaOapg.properties.downloadEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webEditorEnabledForLinguists"]) -> typing.Union[MetaOapg.properties.webEditorEnabledForLinguists, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showUserDataToLinguists"]) -> typing.Union[MetaOapg.properties.showUserDataToLinguists, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailNotifications"]) -> typing.Union[MetaOapg.properties.emailNotifications, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["strictWorkflowFinish"]) -> typing.Union[MetaOapg.properties.strictWorkflowFinish, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["useVendors"]) -> typing.Union[MetaOapg.properties.useVendors, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linguistsMayEditLockedSegments"]) -> typing.Union[MetaOapg.properties.linguistsMayEditLockedSegments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usersMaySetAutoPropagation"]) -> typing.Union[MetaOapg.properties.usersMaySetAutoPropagation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowLoadingExternalContentInEditors"]) -> typing.Union[MetaOapg.properties.allowLoadingExternalContentInEditors, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowLoadingIframes"]) -> typing.Union[MetaOapg.properties.allowLoadingIframes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linguistsMayEditSource"]) -> typing.Union[MetaOapg.properties.linguistsMayEditSource, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linguistsMayEditTagContent"]) -> typing.Union[MetaOapg.properties.linguistsMayEditTagContent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linguistsMayDownloadLqaReport"]) -> typing.Union[MetaOapg.properties.linguistsMayDownloadLqaReport, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernamesDisplayedInLqaReport"]) -> typing.Union[MetaOapg.properties.usernamesDisplayedInLqaReport, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userMaySetInstantQA"]) -> typing.Union[MetaOapg.properties.userMaySetInstantQA, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["triggerWebhooks"]) -> typing.Union[MetaOapg.properties.triggerWebhooks, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notifyJobOwnerStatusChanged"]) -> typing.Union[MetaOapg.properties.notifyJobOwnerStatusChanged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vendors"]) -> typing.Union['VendorSecuritySettingsDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowedDomains"]) -> typing.Union[MetaOapg.properties.allowedDomains, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["downloadEnabled", "webEditorEnabledForLinguists", "showUserDataToLinguists", "emailNotifications", "strictWorkflowFinish", "useVendors", "linguistsMayEditLockedSegments", "usersMaySetAutoPropagation", "allowLoadingExternalContentInEditors", "allowLoadingIframes", "linguistsMayEditSource", "linguistsMayEditTagContent", "linguistsMayDownloadLqaReport", "usernamesDisplayedInLqaReport", "userMaySetInstantQA", "triggerWebhooks", "notifyJobOwnerStatusChanged", "vendors", "allowedDomains", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        downloadEnabled: typing.Union[MetaOapg.properties.downloadEnabled, bool, schemas.Unset] = schemas.unset,
        webEditorEnabledForLinguists: typing.Union[MetaOapg.properties.webEditorEnabledForLinguists, bool, schemas.Unset] = schemas.unset,
        showUserDataToLinguists: typing.Union[MetaOapg.properties.showUserDataToLinguists, bool, schemas.Unset] = schemas.unset,
        emailNotifications: typing.Union[MetaOapg.properties.emailNotifications, bool, schemas.Unset] = schemas.unset,
        strictWorkflowFinish: typing.Union[MetaOapg.properties.strictWorkflowFinish, bool, schemas.Unset] = schemas.unset,
        useVendors: typing.Union[MetaOapg.properties.useVendors, bool, schemas.Unset] = schemas.unset,
        linguistsMayEditLockedSegments: typing.Union[MetaOapg.properties.linguistsMayEditLockedSegments, bool, schemas.Unset] = schemas.unset,
        usersMaySetAutoPropagation: typing.Union[MetaOapg.properties.usersMaySetAutoPropagation, bool, schemas.Unset] = schemas.unset,
        allowLoadingExternalContentInEditors: typing.Union[MetaOapg.properties.allowLoadingExternalContentInEditors, bool, schemas.Unset] = schemas.unset,
        allowLoadingIframes: typing.Union[MetaOapg.properties.allowLoadingIframes, bool, schemas.Unset] = schemas.unset,
        linguistsMayEditSource: typing.Union[MetaOapg.properties.linguistsMayEditSource, bool, schemas.Unset] = schemas.unset,
        linguistsMayEditTagContent: typing.Union[MetaOapg.properties.linguistsMayEditTagContent, bool, schemas.Unset] = schemas.unset,
        linguistsMayDownloadLqaReport: typing.Union[MetaOapg.properties.linguistsMayDownloadLqaReport, bool, schemas.Unset] = schemas.unset,
        usernamesDisplayedInLqaReport: typing.Union[MetaOapg.properties.usernamesDisplayedInLqaReport, bool, schemas.Unset] = schemas.unset,
        userMaySetInstantQA: typing.Union[MetaOapg.properties.userMaySetInstantQA, bool, schemas.Unset] = schemas.unset,
        triggerWebhooks: typing.Union[MetaOapg.properties.triggerWebhooks, bool, schemas.Unset] = schemas.unset,
        notifyJobOwnerStatusChanged: typing.Union[MetaOapg.properties.notifyJobOwnerStatusChanged, bool, schemas.Unset] = schemas.unset,
        vendors: typing.Union['VendorSecuritySettingsDto', schemas.Unset] = schemas.unset,
        allowedDomains: typing.Union[MetaOapg.properties.allowedDomains, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EditProjectSecuritySettingsDtoV2':
        return super().__new__(
            cls,
            *_args,
            downloadEnabled=downloadEnabled,
            webEditorEnabledForLinguists=webEditorEnabledForLinguists,
            showUserDataToLinguists=showUserDataToLinguists,
            emailNotifications=emailNotifications,
            strictWorkflowFinish=strictWorkflowFinish,
            useVendors=useVendors,
            linguistsMayEditLockedSegments=linguistsMayEditLockedSegments,
            usersMaySetAutoPropagation=usersMaySetAutoPropagation,
            allowLoadingExternalContentInEditors=allowLoadingExternalContentInEditors,
            allowLoadingIframes=allowLoadingIframes,
            linguistsMayEditSource=linguistsMayEditSource,
            linguistsMayEditTagContent=linguistsMayEditTagContent,
            linguistsMayDownloadLqaReport=linguistsMayDownloadLqaReport,
            usernamesDisplayedInLqaReport=usernamesDisplayedInLqaReport,
            userMaySetInstantQA=userMaySetInstantQA,
            triggerWebhooks=triggerWebhooks,
            notifyJobOwnerStatusChanged=notifyJobOwnerStatusChanged,
            vendors=vendors,
            allowedDomains=allowedDomains,
            _configuration=_configuration,
            **kwargs,
        )

from phrasetms_client.model.vendor_security_settings_dto import VendorSecuritySettingsDto
