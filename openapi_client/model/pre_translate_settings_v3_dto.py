# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    The version of the OpenAPI document: Latest
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from phrasetms_client import schemas  # noqa: F401


class PreTranslateSettingsV3Dto(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Pre-translate settings
    """


    class MetaOapg:
        
        class properties:
            preTranslateOnJobCreation = schemas.BoolSchema
            setJobStatusCompleted = schemas.BoolSchema
            setJobStatusCompletedWhenConfirmed = schemas.BoolSchema
            setProjectStatusCompleted = schemas.BoolSchema
            overwriteExistingTranslations = schemas.BoolSchema
        
            @staticmethod
            def translationMemorySettings() -> typing.Type['TranslationMemorySettingsDto']:
                return TranslationMemorySettingsDto
        
            @staticmethod
            def machineTranslationSettings() -> typing.Type['MachineTranslationSettingsDto']:
                return MachineTranslationSettingsDto
        
            @staticmethod
            def nonTranslatableSettings() -> typing.Type['NonTranslatableSettingsDto']:
                return NonTranslatableSettingsDto
        
            @staticmethod
            def repetitionsSettings() -> typing.Type['RepetitionsSettingsDto']:
                return RepetitionsSettingsDto
            __annotations__ = {
                "preTranslateOnJobCreation": preTranslateOnJobCreation,
                "setJobStatusCompleted": setJobStatusCompleted,
                "setJobStatusCompletedWhenConfirmed": setJobStatusCompletedWhenConfirmed,
                "setProjectStatusCompleted": setProjectStatusCompleted,
                "overwriteExistingTranslations": overwriteExistingTranslations,
                "translationMemorySettings": translationMemorySettings,
                "machineTranslationSettings": machineTranslationSettings,
                "nonTranslatableSettings": nonTranslatableSettings,
                "repetitionsSettings": repetitionsSettings,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preTranslateOnJobCreation"]) -> MetaOapg.properties.preTranslateOnJobCreation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["setJobStatusCompleted"]) -> MetaOapg.properties.setJobStatusCompleted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["setJobStatusCompletedWhenConfirmed"]) -> MetaOapg.properties.setJobStatusCompletedWhenConfirmed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["setProjectStatusCompleted"]) -> MetaOapg.properties.setProjectStatusCompleted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["overwriteExistingTranslations"]) -> MetaOapg.properties.overwriteExistingTranslations: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["translationMemorySettings"]) -> 'TranslationMemorySettingsDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["machineTranslationSettings"]) -> 'MachineTranslationSettingsDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nonTranslatableSettings"]) -> 'NonTranslatableSettingsDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["repetitionsSettings"]) -> 'RepetitionsSettingsDto': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["preTranslateOnJobCreation", "setJobStatusCompleted", "setJobStatusCompletedWhenConfirmed", "setProjectStatusCompleted", "overwriteExistingTranslations", "translationMemorySettings", "machineTranslationSettings", "nonTranslatableSettings", "repetitionsSettings", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preTranslateOnJobCreation"]) -> typing.Union[MetaOapg.properties.preTranslateOnJobCreation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["setJobStatusCompleted"]) -> typing.Union[MetaOapg.properties.setJobStatusCompleted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["setJobStatusCompletedWhenConfirmed"]) -> typing.Union[MetaOapg.properties.setJobStatusCompletedWhenConfirmed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["setProjectStatusCompleted"]) -> typing.Union[MetaOapg.properties.setProjectStatusCompleted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["overwriteExistingTranslations"]) -> typing.Union[MetaOapg.properties.overwriteExistingTranslations, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["translationMemorySettings"]) -> typing.Union['TranslationMemorySettingsDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["machineTranslationSettings"]) -> typing.Union['MachineTranslationSettingsDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nonTranslatableSettings"]) -> typing.Union['NonTranslatableSettingsDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["repetitionsSettings"]) -> typing.Union['RepetitionsSettingsDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["preTranslateOnJobCreation", "setJobStatusCompleted", "setJobStatusCompletedWhenConfirmed", "setProjectStatusCompleted", "overwriteExistingTranslations", "translationMemorySettings", "machineTranslationSettings", "nonTranslatableSettings", "repetitionsSettings", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        preTranslateOnJobCreation: typing.Union[MetaOapg.properties.preTranslateOnJobCreation, bool, schemas.Unset] = schemas.unset,
        setJobStatusCompleted: typing.Union[MetaOapg.properties.setJobStatusCompleted, bool, schemas.Unset] = schemas.unset,
        setJobStatusCompletedWhenConfirmed: typing.Union[MetaOapg.properties.setJobStatusCompletedWhenConfirmed, bool, schemas.Unset] = schemas.unset,
        setProjectStatusCompleted: typing.Union[MetaOapg.properties.setProjectStatusCompleted, bool, schemas.Unset] = schemas.unset,
        overwriteExistingTranslations: typing.Union[MetaOapg.properties.overwriteExistingTranslations, bool, schemas.Unset] = schemas.unset,
        translationMemorySettings: typing.Union['TranslationMemorySettingsDto', schemas.Unset] = schemas.unset,
        machineTranslationSettings: typing.Union['MachineTranslationSettingsDto', schemas.Unset] = schemas.unset,
        nonTranslatableSettings: typing.Union['NonTranslatableSettingsDto', schemas.Unset] = schemas.unset,
        repetitionsSettings: typing.Union['RepetitionsSettingsDto', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PreTranslateSettingsV3Dto':
        return super().__new__(
            cls,
            *_args,
            preTranslateOnJobCreation=preTranslateOnJobCreation,
            setJobStatusCompleted=setJobStatusCompleted,
            setJobStatusCompletedWhenConfirmed=setJobStatusCompletedWhenConfirmed,
            setProjectStatusCompleted=setProjectStatusCompleted,
            overwriteExistingTranslations=overwriteExistingTranslations,
            translationMemorySettings=translationMemorySettings,
            machineTranslationSettings=machineTranslationSettings,
            nonTranslatableSettings=nonTranslatableSettings,
            repetitionsSettings=repetitionsSettings,
            _configuration=_configuration,
            **kwargs,
        )

from phrasetms_client.model.machine_translation_settings_dto import MachineTranslationSettingsDto
from phrasetms_client.model.non_translatable_settings_dto import NonTranslatableSettingsDto
from phrasetms_client.model.repetitions_settings_dto import RepetitionsSettingsDto
from phrasetms_client.model.translation_memory_settings_dto import TranslationMemorySettingsDto
