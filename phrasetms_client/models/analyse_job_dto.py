# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    OpenAPI spec version: Latest
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AnalyseJobDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'uid': 'str',
        'filename': 'str',
        'data': 'DataDtoV1',
        'discounted_data': 'DataDtoV1'
    }

    attribute_map = {
        'uid': 'uid',
        'filename': 'filename',
        'data': 'data',
        'discounted_data': 'discountedData'
    }

    def __init__(self, uid=None, filename=None, data=None, discounted_data=None):  # noqa: E501
        """AnalyseJobDto - a model defined in Swagger"""  # noqa: E501
        self._uid = None
        self._filename = None
        self._data = None
        self._discounted_data = None
        self.discriminator = None
        if uid is not None:
            self.uid = uid
        if filename is not None:
            self.filename = filename
        if data is not None:
            self.data = data
        if discounted_data is not None:
            self.discounted_data = discounted_data

    @property
    def uid(self):
        """Gets the uid of this AnalyseJobDto.  # noqa: E501


        :return: The uid of this AnalyseJobDto.  # noqa: E501
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this AnalyseJobDto.


        :param uid: The uid of this AnalyseJobDto.  # noqa: E501
        :type: str
        """

        self._uid = uid

    @property
    def filename(self):
        """Gets the filename of this AnalyseJobDto.  # noqa: E501


        :return: The filename of this AnalyseJobDto.  # noqa: E501
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this AnalyseJobDto.


        :param filename: The filename of this AnalyseJobDto.  # noqa: E501
        :type: str
        """

        self._filename = filename

    @property
    def data(self):
        """Gets the data of this AnalyseJobDto.  # noqa: E501


        :return: The data of this AnalyseJobDto.  # noqa: E501
        :rtype: DataDtoV1
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this AnalyseJobDto.


        :param data: The data of this AnalyseJobDto.  # noqa: E501
        :type: DataDtoV1
        """

        self._data = data

    @property
    def discounted_data(self):
        """Gets the discounted_data of this AnalyseJobDto.  # noqa: E501


        :return: The discounted_data of this AnalyseJobDto.  # noqa: E501
        :rtype: DataDtoV1
        """
        return self._discounted_data

    @discounted_data.setter
    def discounted_data(self, discounted_data):
        """Sets the discounted_data of this AnalyseJobDto.


        :param discounted_data: The discounted_data of this AnalyseJobDto.  # noqa: E501
        :type: DataDtoV1
        """

        self._discounted_data = discounted_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AnalyseJobDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AnalyseJobDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
