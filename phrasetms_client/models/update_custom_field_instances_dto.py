# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    OpenAPI spec version: Latest
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UpdateCustomFieldInstancesDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'add_instances': 'list[CreateCustomFieldInstanceDto]',
        'remove_instances': 'list[UidReference]',
        'update_instances': 'list[UpdateCustomFieldInstanceWithUidDto]'
    }

    attribute_map = {
        'add_instances': 'addInstances',
        'remove_instances': 'removeInstances',
        'update_instances': 'updateInstances'
    }

    def __init__(self, add_instances=None, remove_instances=None, update_instances=None):  # noqa: E501
        """UpdateCustomFieldInstancesDto - a model defined in Swagger"""  # noqa: E501
        self._add_instances = None
        self._remove_instances = None
        self._update_instances = None
        self.discriminator = None
        if add_instances is not None:
            self.add_instances = add_instances
        if remove_instances is not None:
            self.remove_instances = remove_instances
        if update_instances is not None:
            self.update_instances = update_instances

    @property
    def add_instances(self):
        """Gets the add_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501


        :return: The add_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :rtype: list[CreateCustomFieldInstanceDto]
        """
        return self._add_instances

    @add_instances.setter
    def add_instances(self, add_instances):
        """Sets the add_instances of this UpdateCustomFieldInstancesDto.


        :param add_instances: The add_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :type: list[CreateCustomFieldInstanceDto]
        """

        self._add_instances = add_instances

    @property
    def remove_instances(self):
        """Gets the remove_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501


        :return: The remove_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :rtype: list[UidReference]
        """
        return self._remove_instances

    @remove_instances.setter
    def remove_instances(self, remove_instances):
        """Sets the remove_instances of this UpdateCustomFieldInstancesDto.


        :param remove_instances: The remove_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :type: list[UidReference]
        """

        self._remove_instances = remove_instances

    @property
    def update_instances(self):
        """Gets the update_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501


        :return: The update_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :rtype: list[UpdateCustomFieldInstanceWithUidDto]
        """
        return self._update_instances

    @update_instances.setter
    def update_instances(self, update_instances):
        """Sets the update_instances of this UpdateCustomFieldInstancesDto.


        :param update_instances: The update_instances of this UpdateCustomFieldInstancesDto.  # noqa: E501
        :type: list[UpdateCustomFieldInstanceWithUidDto]
        """

        self._update_instances = update_instances

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UpdateCustomFieldInstancesDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateCustomFieldInstancesDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
