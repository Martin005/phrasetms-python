# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    OpenAPI spec version: Latest
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from phrasetms_client.models.abstract_user_create_dto import (
    AbstractUserCreateDto,
)  # noqa: F401,E501


class SUBMITTER(AbstractUserCreateDto):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "automation_widgets": "list[IdReference]",
        "project_view_created_by_other_submitters": "bool",
    }
    if hasattr(AbstractUserCreateDto, "swagger_types"):
        swagger_types.update(AbstractUserCreateDto.swagger_types)

    attribute_map = {
        "automation_widgets": "automationWidgets",
        "project_view_created_by_other_submitters": "projectViewCreatedByOtherSubmitters",
    }
    if hasattr(AbstractUserCreateDto, "attribute_map"):
        attribute_map.update(AbstractUserCreateDto.attribute_map)

    def __init__(
        self,
        automation_widgets=None,
        project_view_created_by_other_submitters=None,
        *args,
        **kwargs
    ):  # noqa: E501
        """SUBMITTER - a model defined in Swagger"""  # noqa: E501
        self._automation_widgets = None
        self._project_view_created_by_other_submitters = None
        self.discriminator = None
        if automation_widgets is not None:
            self.automation_widgets = automation_widgets
        if project_view_created_by_other_submitters is not None:
            self.project_view_created_by_other_submitters = (
                project_view_created_by_other_submitters
            )
        AbstractUserCreateDto.__init__(self, *args, **kwargs)

    @property
    def automation_widgets(self) -> list[IdReference]:
        """Gets the automation_widgets of this SUBMITTER.  # noqa: E501

        If no automation widgets are assigned in request the default automation widgets will be assigned instead  # noqa: E501

        :return: The automation_widgets of this SUBMITTER.  # noqa: E501
        :rtype: list[IdReference]
        """
        return self._automation_widgets

    @automation_widgets.setter
    def automation_widgets(self, automation_widgets):
        """Sets the automation_widgets of this SUBMITTER.

        If no automation widgets are assigned in request the default automation widgets will be assigned instead  # noqa: E501

        :param automation_widgets: The automation_widgets of this SUBMITTER.  # noqa: E501
        :type: list[IdReference]
        """

        self._automation_widgets = automation_widgets

    @property
    def project_view_created_by_other_submitters(self) -> bool:
        """Gets the project_view_created_by_other_submitters of this SUBMITTER.  # noqa: E501

        View projects created by other Submitters. Default: false  # noqa: E501

        :return: The project_view_created_by_other_submitters of this SUBMITTER.  # noqa: E501
        :rtype: bool
        """
        return self._project_view_created_by_other_submitters

    @project_view_created_by_other_submitters.setter
    def project_view_created_by_other_submitters(
        self, project_view_created_by_other_submitters
    ):
        """Sets the project_view_created_by_other_submitters of this SUBMITTER.

        View projects created by other Submitters. Default: false  # noqa: E501

        :param project_view_created_by_other_submitters: The project_view_created_by_other_submitters of this SUBMITTER.  # noqa: E501
        :type: bool
        """

        self._project_view_created_by_other_submitters = (
            project_view_created_by_other_submitters
        )

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(SUBMITTER, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SUBMITTER):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
