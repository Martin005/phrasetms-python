# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    OpenAPI spec version: Latest
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

from phrasetms_client.models import ToggleableWeightDto


class DesignWeightsDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "design": "ToggleableWeightDto",
        "length": "ToggleableWeightDto",
        "local_formatting": "ToggleableWeightDto",
        "markup": "ToggleableWeightDto",
        "missing_text": "ToggleableWeightDto",
        "truncation": "ToggleableWeightDto",
    }

    attribute_map = {
        "design": "design",
        "length": "length",
        "local_formatting": "localFormatting",
        "markup": "markup",
        "missing_text": "missingText",
        "truncation": "truncation",
    }

    def __init__(
        self,
        design=None,
        length=None,
        local_formatting=None,
        markup=None,
        missing_text=None,
        truncation=None,
    ):  # noqa: E501
        """DesignWeightsDto - a model defined in Swagger"""  # noqa: E501
        self._design = None
        self._length = None
        self._local_formatting = None
        self._markup = None
        self._missing_text = None
        self._truncation = None
        self.discriminator = None
        if design is not None:
            self.design = design
        if length is not None:
            self.length = length
        if local_formatting is not None:
            self.local_formatting = local_formatting
        if markup is not None:
            self.markup = markup
        if missing_text is not None:
            self.missing_text = missing_text
        if truncation is not None:
            self.truncation = truncation

    @property
    def design(self) -> ToggleableWeightDto:
        """Gets the design of this DesignWeightsDto.  # noqa: E501


        :return: The design of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._design

    @design.setter
    def design(self, design):
        """Sets the design of this DesignWeightsDto.


        :param design: The design of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._design = design

    @property
    def length(self) -> ToggleableWeightDto:
        """Gets the length of this DesignWeightsDto.  # noqa: E501


        :return: The length of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this DesignWeightsDto.


        :param length: The length of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._length = length

    @property
    def local_formatting(self) -> ToggleableWeightDto:
        """Gets the local_formatting of this DesignWeightsDto.  # noqa: E501


        :return: The local_formatting of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._local_formatting

    @local_formatting.setter
    def local_formatting(self, local_formatting):
        """Sets the local_formatting of this DesignWeightsDto.


        :param local_formatting: The local_formatting of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._local_formatting = local_formatting

    @property
    def markup(self) -> ToggleableWeightDto:
        """Gets the markup of this DesignWeightsDto.  # noqa: E501


        :return: The markup of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._markup

    @markup.setter
    def markup(self, markup):
        """Sets the markup of this DesignWeightsDto.


        :param markup: The markup of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._markup = markup

    @property
    def missing_text(self) -> ToggleableWeightDto:
        """Gets the missing_text of this DesignWeightsDto.  # noqa: E501


        :return: The missing_text of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._missing_text

    @missing_text.setter
    def missing_text(self, missing_text):
        """Sets the missing_text of this DesignWeightsDto.


        :param missing_text: The missing_text of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._missing_text = missing_text

    @property
    def truncation(self) -> ToggleableWeightDto:
        """Gets the truncation of this DesignWeightsDto.  # noqa: E501


        :return: The truncation of this DesignWeightsDto.  # noqa: E501
        :rtype: ToggleableWeightDto
        """
        return self._truncation

    @truncation.setter
    def truncation(self, truncation):
        """Sets the truncation of this DesignWeightsDto.


        :param truncation: The truncation of this DesignWeightsDto.  # noqa: E501
        :type: ToggleableWeightDto
        """

        self._truncation = truncation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(DesignWeightsDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DesignWeightsDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
