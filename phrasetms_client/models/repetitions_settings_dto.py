# coding: utf-8

"""
    Phrase TMS API

    Welcome to Phrase's TMS API documentation.    Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs.    If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new).    Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:  > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)  # noqa: E501

    OpenAPI spec version: Latest
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RepetitionsSettingsDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'auto_propagate_repetitions': 'bool',
        'confirm_repetitions': 'bool',
        'auto_propagate_to_locked_repetitions': 'bool',
        'lock_subsequent_repetitions': 'bool'
    }

    attribute_map = {
        'auto_propagate_repetitions': 'autoPropagateRepetitions',
        'confirm_repetitions': 'confirmRepetitions',
        'auto_propagate_to_locked_repetitions': 'autoPropagateToLockedRepetitions',
        'lock_subsequent_repetitions': 'lockSubsequentRepetitions'
    }

    def __init__(self, auto_propagate_repetitions=None, confirm_repetitions=None, auto_propagate_to_locked_repetitions=None, lock_subsequent_repetitions=None):  # noqa: E501
        """RepetitionsSettingsDto - a model defined in Swagger"""  # noqa: E501
        self._auto_propagate_repetitions = None
        self._confirm_repetitions = None
        self._auto_propagate_to_locked_repetitions = None
        self._lock_subsequent_repetitions = None
        self.discriminator = None
        if auto_propagate_repetitions is not None:
            self.auto_propagate_repetitions = auto_propagate_repetitions
        if confirm_repetitions is not None:
            self.confirm_repetitions = confirm_repetitions
        if auto_propagate_to_locked_repetitions is not None:
            self.auto_propagate_to_locked_repetitions = auto_propagate_to_locked_repetitions
        if lock_subsequent_repetitions is not None:
            self.lock_subsequent_repetitions = lock_subsequent_repetitions

    @property
    def auto_propagate_repetitions(self):
        """Gets the auto_propagate_repetitions of this RepetitionsSettingsDto.  # noqa: E501

        Propagate repetitions. Default: false  # noqa: E501

        :return: The auto_propagate_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :rtype: bool
        """
        return self._auto_propagate_repetitions

    @auto_propagate_repetitions.setter
    def auto_propagate_repetitions(self, auto_propagate_repetitions):
        """Sets the auto_propagate_repetitions of this RepetitionsSettingsDto.

        Propagate repetitions. Default: false  # noqa: E501

        :param auto_propagate_repetitions: The auto_propagate_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :type: bool
        """

        self._auto_propagate_repetitions = auto_propagate_repetitions

    @property
    def confirm_repetitions(self):
        """Gets the confirm_repetitions of this RepetitionsSettingsDto.  # noqa: E501

        Set segment status to confirmed for: Repetitions. Default: false  # noqa: E501

        :return: The confirm_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :rtype: bool
        """
        return self._confirm_repetitions

    @confirm_repetitions.setter
    def confirm_repetitions(self, confirm_repetitions):
        """Sets the confirm_repetitions of this RepetitionsSettingsDto.

        Set segment status to confirmed for: Repetitions. Default: false  # noqa: E501

        :param confirm_repetitions: The confirm_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :type: bool
        """

        self._confirm_repetitions = confirm_repetitions

    @property
    def auto_propagate_to_locked_repetitions(self):
        """Gets the auto_propagate_to_locked_repetitions of this RepetitionsSettingsDto.  # noqa: E501

        Changes in 1st repetition propagate upon confirmation into subsequent locked repetitions. Default: false  # noqa: E501

        :return: The auto_propagate_to_locked_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :rtype: bool
        """
        return self._auto_propagate_to_locked_repetitions

    @auto_propagate_to_locked_repetitions.setter
    def auto_propagate_to_locked_repetitions(self, auto_propagate_to_locked_repetitions):
        """Sets the auto_propagate_to_locked_repetitions of this RepetitionsSettingsDto.

        Changes in 1st repetition propagate upon confirmation into subsequent locked repetitions. Default: false  # noqa: E501

        :param auto_propagate_to_locked_repetitions: The auto_propagate_to_locked_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :type: bool
        """

        self._auto_propagate_to_locked_repetitions = auto_propagate_to_locked_repetitions

    @property
    def lock_subsequent_repetitions(self):
        """Gets the lock_subsequent_repetitions of this RepetitionsSettingsDto.  # noqa: E501

        If auto-propagated subsequent repetitions should be locked. Default: false  # noqa: E501

        :return: The lock_subsequent_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :rtype: bool
        """
        return self._lock_subsequent_repetitions

    @lock_subsequent_repetitions.setter
    def lock_subsequent_repetitions(self, lock_subsequent_repetitions):
        """Sets the lock_subsequent_repetitions of this RepetitionsSettingsDto.

        If auto-propagated subsequent repetitions should be locked. Default: false  # noqa: E501

        :param lock_subsequent_repetitions: The lock_subsequent_repetitions of this RepetitionsSettingsDto.  # noqa: E501
        :type: bool
        """

        self._lock_subsequent_repetitions = lock_subsequent_repetitions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RepetitionsSettingsDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RepetitionsSettingsDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
